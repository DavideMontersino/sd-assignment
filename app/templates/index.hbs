<h1>Sysdig event viewer</h1>

<p>
  I was eager to try Ember.js. It has been interesting, but I admit the result is not what I wanted to achieve;
  I had a few more roadblocks than expected. <br/>
  This result is pretty down to minimal functionalities.
</p>

<h2>Still to do</h2>
<p>
  This is about stuff that I would like to have done but could not do due to lack of time. In order of importance: <br/>
</p>
<ul>
  <li>Secure the API key. It should of course not reach the client side.
  Techniques to solve the problem can include a proxy capable of initiating session, i.e. with cookies or jwt</li>
  <li>Ui is blocked for too long while loading.
  I needed to research how to make ember render only a few elements at once; By this I mean either pagination, or giving the layout engine just a few elements at once instead of all the 320 elements.</li>
  <li>Write tests. I had no time to check ember’s testing facilities.</li>
  <li>The adapter (app/adapters/application.js) needs to be type-wise - now it would the same transformation to all the code if other api endpoints wuld be added.</li>
  <li>Server side pagination. I would need to look a little bit more into Sysdig API.
  (I noticed there is a <kbd>limit</kbd> querystring parameter that I could use for example, but I also need to set a ‘start from’ parameter)</li>
  <li>Filtering and ordering options</li>
  <li>A good git history. I am a huge fan of atomic, semantic commits. But in this case I was messing around a lot learning ember.
  I usually take care of the history a lot, doing interactive rebases (of my local commits) to ensure a proper code documentation.</li>
  <li>Better css. I opted to use bootstrap and I added only one line of css.</li>
  <li>There is no specification for the description field; however it seems possible to split the description between <kbd>;</kbd> and have a key-value pair divided by <kbd>:</kbd></li>
</ul>
